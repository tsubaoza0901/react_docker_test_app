version: '3'
services:
  node:
    build:
      context: ./docker_assets/node
    ports:
      - '3000:3000'
    volumes:
      - ./client:/var/www/client
    environment:
      - NODE_ENV=development
    tty: true
    container_name: testapp_client
    networks:
      - testnet
  db:
    build:
      context: ./docker_assets/db_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: testapp_db
    ports:
      - '3306:3306'
    tty: true
    volumes:
      - ./docker_assets/db_mysql/mysql_init:/docker-entrypoint-initdb.d
      - ./docker_assets/db_mysql/mysql_data:/var/lib/mysql
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --skip-character-set-client-handshake
    networks:
      - testnet
  # testdb:
  #   build:
  #     context: ./docker_assets/db_mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #   container_name: testapp_testdb
  #   ports:
  #     - '3306:3306'
  #   tty: true
  #   volumes:
  #     - ./docker_assets/db_mysql/mysql_init:/docker-entrypoint-initdb.d
  #     - ./docker_assets/db_mysql/mysql_data:/var/lib/mysql
  #   command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --skip-character-set-client-handshake
  #   networks:
  #     - testnet
  golang:
    build:
      context: ./docker_assets/go
    volumes:
      - '.:/go/src/app'
    container_name: testapp
    ports:
      - '8080:8080'
    tty: true
    depends_on:
      - db
    networks:
      - testnet
networks:
  testnet:
